{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["voice","concat","voiceGoogle","voiceAmazon","v","code","toLowerCase","split","nativeName","language","langs","name","cols","colmds","term","defaultData","data","updateData","useState","search","setSearch","result","useEffect","results","filter","item","JSON","stringify","indexOf","sort","a","b","className","href","src","style","alt","id","type","placeholder","aria-label","value","onChange","evt","target","scope","map","key","provider","onClick","audio_promise","Audio","play","undefined","then","catch","error","console","log","playSample","gender"],"mappings":"uvoCASIA,G,oBAAQ,GAAGC,OAAOC,EAAaC,IAEnC,EAAgBH,EAAhB,wDAAuB,CAAC,IAAD,oFAAZI,EAAY,EACjBC,EAAOD,EAAEC,KAAKC,cAAcC,MAAM,KAAK,GAE3CH,EAAEI,WAAa,GAEZJ,EAAEK,UAAYL,EAAEJ,OAASU,EAAML,KAChCD,EAAEK,SAAWC,EAAML,GAAMM,MAGxBD,EAAML,KACPD,EAAEI,WAAaE,EAAML,GAAMG,YA2B/B,IAgBII,EAAO,iCACPC,EAAS,2CAEE,qBAAO,IA1CJC,EAAMC,EAAa,EAC5BC,EAAMC,EAyCM,EACSC,mBAAS,IAA9BC,EADY,KACJC,EADI,KAEbC,GA5CUP,EA4CQK,EA5CFJ,EA4CU,GA5CG,EACRG,mBAASH,GAA7BC,EAD4B,KACtBC,EADsB,KAGnCK,qBAAU,WACR,IAAIC,EAAUvB,EAAMwB,QAAO,SAACC,GAE1B,MAAmBX,EAAKP,MAAM,KAA9B,wDAAoC,CAAC,IAAD,oFAAzBO,EAAyB,EAElC,IAA4C,GAD7BY,KAAKC,UAAUF,GAAMnB,cACxBsB,QAAQd,EAAKR,eAAsB,OAAO,EAGxD,OAAO,KAITiB,EAAQM,MAAM,SAACC,EAAEC,GAAH,OAASD,EAAEzB,KAAO0B,EAAE1B,KAAO,GAAK,KAE9CY,EAAWM,KACV,CAACT,IAEGE,GA0BP,OACE,oCACE,yBAAKgB,UAAU,4DACb,yBAAKA,UAAU,aAEb,uBAAGA,UAAU,eAAeC,KAAK,KAC/B,yBAAKC,IAAI,oBAAoBC,MAAO,CAAC,MAAU,QAAUC,IAAI,qBAD/D,aAIA,yBAAKJ,UAAU,GAAGK,GAAG,qBACnB,0BAAML,UAAU,eACd,2BAAQA,UAAU,eAAeM,KAAK,SAASC,YAAY,SAASC,aAAW,SAASC,MAAOtB,EAAQuB,SAAU,SAAAC,GAAG,OAAIvB,EAAUuB,EAAIC,OAAOH,cAQrJ,yBAAKT,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,uBACb,2BAAOA,UAAU,sDACf,+BACE,4BAEE,wBAAIa,MAAM,MAAMb,UAAWpB,GAA3B,YACA,wBAAIiC,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,UAEA,wBAAIA,MAAM,OAAV,YACA,wBAAIA,MAAM,MAAMb,UAAWnB,GAA3B,OAGJ,+BAEIQ,EAAOyB,KAAI,SAACrB,GAAD,OACT,wBAAIsB,IAAKtB,EAAKzB,OACZ,wBAAIgC,UAAWpB,GACZa,EAAKuB,UAER,4BACE,4BACIhB,UAAU,mBACViB,QAAU,kBAnErB,SAACjD,EAAOgD,GAEvB,IAEEE,EADQ,IAAIC,MADP,UAAanD,EAAb,KAAkC,UAAZgD,EAAsB,MAAM,QAEjCI,YAEFC,IAAlBH,GACFA,EAAcI,MAAK,eAEhBC,OAAM,SAASC,GAChBC,QAAQC,IAAI,gBAyD0BC,CAAWlC,EAAKzB,MAAOyB,EAAKuB,YAFhD,MAKE,0CAAgBvB,EAAKzB,QAEzB,4BAAKyB,EAAKmC,QACV,4BAAKnC,EAAKhB,UACV,wBAAIuB,UAAWnB,GAASY,EAAKjB,wB","file":"component---src-pages-index-js-960a436dfac72bc542b5.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport voiceGoogle from '../../static/data/google.json';\r\nimport voiceAmazon from '../../static/data/amazon.json';\r\nimport langs from '../../static/data/langs.json';\r\n\r\n\r\nimport '../../static/css/bootstrap.min.css';\r\nimport '../../static/css/main.css';\r\n\r\nlet voice = [].concat(voiceGoogle, voiceAmazon);\r\n\r\nfor (const v of voice) {\r\n  let code = v.code.toLowerCase().split('-')[0];\r\n \r\n  v.nativeName = \"\";\r\n\r\n  if(v.language == v.voice && langs[code]){\r\n    v.language = langs[code].name;\r\n  }\r\n\r\n  if(langs[code]){\r\n    v.nativeName = langs[code].nativeName;\r\n  }\r\n}\r\n\r\nfunction useFetch(term, defaultData) {\r\n  const [data, updateData] = useState(defaultData)\r\n\r\n  useEffect(() => {\r\n    let results = voice.filter((item) => {\r\n      \r\n      for (const term of term.split(\" \")) {\r\n        var toSearch = JSON.stringify(item).toLowerCase();\r\n        if(toSearch.indexOf(term.toLowerCase()) == -1) return false;\r\n      }\r\n\r\n      return true;\r\n    \r\n    });\r\n\r\n    results.sort( (a,b) => a.code > b.code ? 1 : -1);\r\n    \r\n    updateData(results);\r\n  }, [term])\r\n\r\n  return data\r\n}\r\n\r\nlet playSample = (voice, provider) => {\r\n\r\n  let url = `/audio/${voice}.${provider == 'amazon' ?'mp3':'ogg'}`,\r\n    audio = new Audio( url ),\r\n    audio_promise = audio.play();\r\n\r\n  if (audio_promise !== undefined) {\r\n    audio_promise.then(function() {\r\n      \r\n    }).catch(function(error) {\r\n      console.log('no sample');\r\n    });\r\n  }\r\n}\r\n\r\n\r\nlet cols = 'd-sm-none d-xs-none d-md-block';\r\nlet colmds = 'd-sm-none d-xs-none d-md-none d-lg-block';\r\n\r\nexport default () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const result = useFetch(search, []);\r\n\r\n  return (\r\n    <>    \r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light sticky-top\">\r\n        <div className=\"container\">\r\n          \r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            <img src=\"/img/face_200.png\" style={{\"width\" : \"37px\" }} alt=\"Responsive image\" />  talkbot\r\n          </a>\r\n\r\n          <div className=\"\" id=\"navbarNavDropdown\">\r\n            <form className=\"form-inline\">\r\n              <input  className=\"form-control\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" value={search} onChange={evt => setSearch(evt.target.value)} />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      \r\n      \r\n      <div className=\"bg-dark\">\r\n        <div className=\"container\">\r\n          <div className=\"table-responsive-md\">\r\n            <table className=\"table table-dark table-hover table-sm header-fixed\">\r\n              <thead>\r\n                <tr>\r\n\r\n                  <th scope=\"col\" className={cols}>Provider</th>\r\n                  <th scope=\"col\">voice</th>\r\n                  <th scope=\"col\">Gender</th>\r\n                  \r\n                  <th scope=\"col\">Language</th>\r\n                  <th scope=\"col\" className={colmds}>-</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {\r\n                  result.map((item) => (\r\n                    <tr key={item.voice}>\r\n                      <td className={cols}>\r\n                        {item.provider}\r\n                      </td>\r\n                      <td>\r\n                        <button \r\n                            className=\"btn sound-button\"\r\n                            onClick={ () => playSample(item.voice, item.provider) }>\r\n                            ðŸ”Š\r\n                          </button>\r\n                          <code>!myvoice {item.voice}</code>\r\n                      </td>\r\n                      <td>{item.gender}</td>\r\n                      <td>{item.language}</td>\r\n                      <td className={colmds}>{item.nativeName}</td>\r\n                    </tr>\r\n\r\n                  ))\r\n                }\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}